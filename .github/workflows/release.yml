name: release

on:
  push:
    branches: [fix/release]

jobs:

  goreleaser:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Install goreleaser
        run: |
          curl -L https://github.com/goreleaser/goreleaser/releases/download/v0.159.0/goreleaser_amd64.deb -o goreleaser.deb
          sudo dpkg -i goreleaser.deb
      - name: Install GCC multilib
        run: |
          sudo apt-get install gcc-multilib g++-multilib
      - name: Install musl-cross
        run: |
          git clone https://github.com/GregorR/musl-cross.git
          cd musl-cross
          chmod +x build.sh
          sudo apt install libmpfr-dev libgmp-dev libmpc-dev
          ./build.sh
          cd ..
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        uses: go-semantic-release/action@v1
        id: semantic
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      -
        run: git clean -fdx
      -
        name: Set up Git
        if: steps.semantic.outputs.version != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
      -
        name: Update tags
        if: steps.semantic.outputs.version != ''
        run: |
          TAG=v${{ steps.semantic.outputs.version }}
          git push origin :refs/tags/${TAG}
          git tag -fa ${TAG} -m "release v${{ steps.semantic.outputs.version }}"
          git push origin ${TAG}
      -
        name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            goreleaser release --config=.github/goreleaser.yml
